(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{218:function(t,e,a){"use strict";a.r(e);var s=a(0),c=Object(s.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h3",{attrs:{id:"_1-computed-和-watch-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-computed-和-watch-的区别"}},[this._v("#")]),this._v(" 1. computed 和 watch 的区别")]),this._v(" "),e("ul",[e("li",[e("p",[this._v("computed 1.为计算属性意思, 2.是根据实例的其他值来计算出来的值, 他的计算是3.依赖缓存的, 只有当依赖的属性值发生变化时才会重新计算。\n4.根据其他属性计算出来的属性可以使用 computed")])]),this._v(" "),e("li",[e("p",[this._v("watch 1.为监听的意思, 2.当他监听的属性的数据变化时会执行一个函数, 这个函数有两个参数newVal、oldVal 3.有immediate(第一次渲染时是否调用这个函数)、\ndeep(控制对象的属性变化是否为对象的变化)两个选项 4.可以使用vw.$watch()来定义watch 5.当根据某个属性的变化来做一些事情时, 可以用watch")])])])])}),[],!1,null,null,null);e.default=c.exports}}]);