(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{222:function(v,_,i){"use strict";i.r(_);var t=i(0),l=Object(t.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h3",{attrs:{id:"http-常见状态码"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-常见状态码"}},[v._v("#")]),v._v(" HTTP 常见状态码")]),v._v(" "),i("ol",[i("li",[v._v("2xx 表示成功")]),v._v(" "),i("li",[v._v("3xx 需要进一步操作\n"),i("ul",[i("li",[v._v("301 资源永久被转移到其他地方（永久重定向）")]),v._v(" "),i("li",[v._v("304 服务器的资源未修改，服务器不返回任何资源，客户端会访问缓存的资源")])])]),v._v(" "),i("li",[v._v("4xx 浏览器错误\n"),i("ul",[i("li",[v._v("400 客户端请求的语法错误，服务器无法理解")]),v._v(" "),i("li",[v._v("401 请求要求用户需要身份验证")]),v._v(" "),i("li",[v._v("403 服务端理解客户端请求，但是拒绝执行此请求")]),v._v(" "),i("li",[v._v("404 服务器找不到相关的资源")]),v._v(" "),i("li",[v._v("413 请求的实体过大，服务器无法处理")])])]),v._v(" "),i("li",[v._v("5xx 服务器错误")])]),v._v(" "),i("h3",{attrs:{id:"http-请求报文-（一般就是-请求行、请求头、请求空行、请求体）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-请求报文-（一般就是-请求行、请求头、请求空行、请求体）"}},[v._v("#")]),v._v(" HTTP 请求报文 （一般就是 请求行、请求头、请求空行、请求体）")]),v._v(" "),i("ol",[i("li",[i("p",[v._v("报文首部")]),v._v(" "),i("ul",[i("li",[v._v("请求行\n"),i("ul",[i("li",[v._v("请求方法")]),v._v(" "),i("li",[v._v("请求 url")]),v._v(" "),i("li",[v._v("HTTP 协议及版本")])])]),v._v(" "),i("li",[v._v("请求首部字段 if-Match、if-None-Match、if-modified-Since、if-Unmodified-Since")]),v._v(" "),i("li",[v._v("通用首部字段 Catch-Control、Pragma")]),v._v(" "),i("li",[v._v("实体首部字段 Expires、Last-Modified")])])]),v._v(" "),i("li",[i("p",[v._v("空行")])]),v._v(" "),i("li",[i("p",[v._v("报文主体")])])]),v._v(" "),i("h3",{attrs:{id:"http-响应报文-（一般就是-响应行、响应头、响应空行、响应体）"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http-响应报文-（一般就是-响应行、响应头、响应空行、响应体）"}},[v._v("#")]),v._v(" HTTP 响应报文 （一般就是 响应行、响应头、响应空行、响应体）")]),v._v(" "),i("ol",[i("li",[v._v("报文首部\n"),i("ul",[i("li",[i("p",[v._v("响应行")]),v._v(" "),i("ul",[i("li",[v._v("HTTP 协议及版本")]),v._v(" "),i("li",[v._v("状态码及状态描述")])])]),v._v(" "),i("li",[i("p",[v._v("响应首部字段 ETag")])]),v._v(" "),i("li",[i("p",[v._v("通用首部字段 Catch-Control、Pragma")])]),v._v(" "),i("li",[i("p",[v._v("实体首部字段 Expires、Last-Modified")])])])]),v._v(" "),i("li",[v._v("空行")]),v._v(" "),i("li",[v._v("报文主体")])]),v._v(" "),i("h3",{attrs:{id:"http首部字段作用"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#http首部字段作用"}},[v._v("#")]),v._v(" HTTP首部字段作用")]),v._v(" "),i("ol",[i("li",[v._v("Catch-Control （HTTP 1.1）用来指定缓存过期时间，距离发起请求的时间\n"),i("ul",[i("li",[v._v("CacheControl: max-age=3600")]),v._v(" "),i("li",[v._v("是相对时间，与本地时间无关")])])]),v._v(" "),i("li",[v._v("Pragma: no-cache 告知客户端对该资源不要读缓存、而是向服务器发请求")]),v._v(" "),i("li",[v._v("Expires （HTTP 1.0）告诉客户端资源缓存过期时间，如果没过该时间点就不发请求\n"),i("ul",[i("li",[v._v("Expires: Thur, 11 Jun 2020 11:33:01 GMT")]),v._v(" "),i("li",[v._v("这个时间是服务器时间，如果用户修改了自己的系统时间，那么缓存时间就没有意义了")]),v._v(" "),i("li",[v._v("优先级 Pragma > Catch-Control > Expires")])])]),v._v(" "),i("li",[v._v("ETag (HTTP 1.1) 服务器会计算出一个唯一标识符（如 md5）将这个标识符附在响应头上，返给客户端，客户端会在下次请求时一起带给客户端，如果和服务器的标识符匹配上就返回304、否则200")])]),v._v(" "),i("h3",{attrs:{id:"get-和-post-的区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别"}},[v._v("#")]),v._v(" GET 和 POST 的区别")]),v._v(" "),i("p",[v._v("参数")]),v._v(" "),i("ul",[i("li",[v._v("GET 参数通过 url 传递，POST 是放在请求体中的")]),v._v(" "),i("li",[v._v("GET 比 POST 更不安全，因为参数都是放在 url 里，所以不能传递敏感信息")]),v._v(" "),i("li",[v._v("对于参数的数据类型而言，GET 只接受 ACSII 字符，POST 没有限制")]),v._v(" "),i("li",[v._v("GET 请求在 url 传递参数是有长度限制的，POST 没有")]),v._v(" "),i("li",[v._v("GET 请求的参数会完整保留在浏览器历史记录中，而 POST 参数不会被保留")])]),v._v(" "),i("p",[v._v("编码")]),v._v(" "),i("ul",[i("li",[v._v("GET 请求只能进行 url 编码，而 POST 支持多种编码方式")])]),v._v(" "),i("p",[v._v("浏览器")]),v._v(" "),i("ul",[i("li",[v._v("GET 请求会被浏览器主动 catch，而 POST 不会，除非手动设置")]),v._v(" "),i("li",[v._v("GET 请求的 url 地址可以被添加到收藏栏里，POST 不可以")]),v._v(" "),i("li",[v._v("GET 请求在浏览器回退时是无害的，而 POST 会再次提出请求")])]),v._v(" "),i("p",[v._v("（其实就一个区别:   GET 用于获取资源，POST 用于提交资源）")]),v._v(" "),i("h3",{attrs:{id:"cookie-和-localstorage-区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-localstorage-区别"}},[v._v("#")]),v._v(" Cookie 和 LocalStorage 区别")]),v._v(" "),i("ul",[i("li",[v._v("Cookie 是服务器下发给浏览器的一段字符串，当浏览器再次发起相同的二级域名请求时，浏览器必须附上 Cookie。")]),v._v(" "),i("li",[v._v("Cookie 会被发到服务器，LocalStorage 不会")]),v._v(" "),i("li",[v._v("Cookie 一般最大为 4k，LocalStorage 一般最大为 5M 或者 10M（依浏览器而定）")])]),v._v(" "),i("h3",{attrs:{id:"localstorage-和-sessionstorage-区别"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#localstorage-和-sessionstorage-区别"}},[v._v("#")]),v._v(" LocalStorage 和 SessionStorage 区别")]),v._v(" "),i("p",[v._v("LocalStorage 一般不会自动过期，除非用户手动删除，SessionStorage 会在回话结束时过期（比如关闭浏览器）")]),v._v(" "),i("h3",{attrs:{id:"cookie-和-session"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session"}},[v._v("#")]),v._v(" Cookie 和 Session")]),v._v(" "),i("ul",[i("li",[v._v("Cookie 是存在浏览器中的，Session 是存在服务器中的")]),v._v(" "),i("li",[v._v("Session 是基于 Cookie 实现的，具体做法是将 SessionID 存在 Cookie 中")])])])}),[],!1,null,null,null);_.default=l.exports}}]);